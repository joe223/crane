"use strict";

var _core = require("@cranejs/core");

const utils = require('./utils');

const webpack = require('webpack');

const merge = require('webpack-merge');

const baseWebpackConfig = require('./webpack.base.conf');

console.debug(`正在构建 testing 版本，
    当前环境设置: ${process.env.NODE_ENV},
    当前 MODE 设置: ${process.env.MODE}`);

module.exports = function (module) {
  const webpackConfig = merge(baseWebpackConfig, {
    output: {
      path: _core.config.build.assetsRoot,
      filename: '[name].js',
      publicPath: process.env.NODE_ENV === 'production' ? _core.config.build.assetsPublicPath : _core.config.dev.assetsPublicPath
    },
    mode: 'development',
    // use inline sourcemap for karma-sourcemap-loader
    module: {
      rules: utils.styleLoaders(module)
    },
    devtool: '#inline-source-map',
    resolveLoader: {
      alias: {
        // necessary to to make lang="scss" work in test when using vue-loader's ?inject option
        // see discussion at https://github.com/vuejs/vue-loader/issues/724
        'scss-loader': 'sass-loader'
      }
    },
    plugins: []
  }); // no need for app entry during tests

  delete webpackConfig.entry;
  return webpackConfig;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJwYWNrQ29uZmlnL3dlYnBhY2sudGVzdC5jb25mLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIndlYnBhY2siLCJtZXJnZSIsImJhc2VXZWJwYWNrQ29uZmlnIiwiY29uc29sZSIsImRlYnVnIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTU9ERSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ3ZWJwYWNrQ29uZmlnIiwib3V0cHV0IiwicGF0aCIsImNvbmZpZyIsImJ1aWxkIiwiYXNzZXRzUm9vdCIsImZpbGVuYW1lIiwicHVibGljUGF0aCIsImFzc2V0c1B1YmxpY1BhdGgiLCJkZXYiLCJtb2RlIiwicnVsZXMiLCJzdHlsZUxvYWRlcnMiLCJkZXZ0b29sIiwicmVzb2x2ZUxvYWRlciIsImFsaWFzIiwicGx1Z2lucyIsImVudHJ5Il0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUdBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxlQUFELENBQXJCOztBQUNBLE1BQU1HLGlCQUFpQixHQUFHSCxPQUFPLENBQUMscUJBQUQsQ0FBakM7O0FBRUFJLE9BQU8sQ0FBQ0MsS0FBUixDQUFlO0FBQ2YsY0FBY0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVM7QUFDbkMsa0JBQWtCRixPQUFPLENBQUNDLEdBQVIsQ0FBWUUsSUFBSyxFQUZuQzs7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVELE1BQVYsRUFBa0I7QUFDL0IsUUFBTUUsYUFBYSxHQUFHVixLQUFLLENBQUNDLGlCQUFELEVBQW9CO0FBQzNDVSxJQUFBQSxNQUFNLEVBQUU7QUFDSkMsTUFBQUEsSUFBSSxFQUFFQyxhQUFPQyxLQUFQLENBQWFDLFVBRGY7QUFFSkMsTUFBQUEsUUFBUSxFQUFFLFdBRk47QUFHSkMsTUFBQUEsVUFBVSxFQUFFYixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixZQUF6QixHQUNOTyxhQUFPQyxLQUFQLENBQWFJLGdCQURQLEdBRU5MLGFBQU9NLEdBQVAsQ0FBV0Q7QUFMYixLQURtQztBQVEzQ0UsSUFBQUEsSUFBSSxFQUFFLGFBUnFDO0FBUzNDO0FBQ0FaLElBQUFBLE1BQU0sRUFBRTtBQUNKYSxNQUFBQSxLQUFLLEVBQUV4QixLQUFLLENBQUN5QixZQUFOLENBQW1CZCxNQUFuQjtBQURILEtBVm1DO0FBYTNDZSxJQUFBQSxPQUFPLEVBQUUsb0JBYmtDO0FBYzNDQyxJQUFBQSxhQUFhLEVBQUU7QUFDWEMsTUFBQUEsS0FBSyxFQUFFO0FBQ0g7QUFDQTtBQUNBLHVCQUFlO0FBSFo7QUFESSxLQWQ0QjtBQXFCM0NDLElBQUFBLE9BQU8sRUFBRTtBQXJCa0MsR0FBcEIsQ0FBM0IsQ0FEK0IsQ0F5Qi9COztBQUNBLFNBQU9oQixhQUFhLENBQUNpQixLQUFyQjtBQUVBLFNBQU9qQixhQUFQO0FBQ0gsQ0E3QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIGNvbmZpZ1xufSBmcm9tICdAY3JhbmVqcy9jb3JlJ1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcbmNvbnN0IHdlYnBhY2sgPSByZXF1aXJlKCd3ZWJwYWNrJylcbmNvbnN0IG1lcmdlID0gcmVxdWlyZSgnd2VicGFjay1tZXJnZScpXG5jb25zdCBiYXNlV2VicGFja0NvbmZpZyA9IHJlcXVpcmUoJy4vd2VicGFjay5iYXNlLmNvbmYnKVxuXG5jb25zb2xlLmRlYnVnKGDmraPlnKjmnoTlu7ogdGVzdGluZyDniYjmnKzvvIxcbiAgICDlvZPliY3njq/looPorr7nva46ICR7cHJvY2Vzcy5lbnYuTk9ERV9FTlZ9LFxuICAgIOW9k+WJjSBNT0RFIOiuvue9rjogJHtwcm9jZXNzLmVudi5NT0RFfWApXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1vZHVsZSkge1xuICAgIGNvbnN0IHdlYnBhY2tDb25maWcgPSBtZXJnZShiYXNlV2VicGFja0NvbmZpZywge1xuICAgICAgICBvdXRwdXQ6IHtcbiAgICAgICAgICAgIHBhdGg6IGNvbmZpZy5idWlsZC5hc3NldHNSb290LFxuICAgICAgICAgICAgZmlsZW5hbWU6ICdbbmFtZV0uanMnLFxuICAgICAgICAgICAgcHVibGljUGF0aDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJ1xuICAgICAgICAgICAgICAgID8gY29uZmlnLmJ1aWxkLmFzc2V0c1B1YmxpY1BhdGhcbiAgICAgICAgICAgICAgICA6IGNvbmZpZy5kZXYuYXNzZXRzUHVibGljUGF0aFxuICAgICAgICB9LFxuICAgICAgICBtb2RlOiAnZGV2ZWxvcG1lbnQnLFxuICAgICAgICAvLyB1c2UgaW5saW5lIHNvdXJjZW1hcCBmb3Iga2FybWEtc291cmNlbWFwLWxvYWRlclxuICAgICAgICBtb2R1bGU6IHtcbiAgICAgICAgICAgIHJ1bGVzOiB1dGlscy5zdHlsZUxvYWRlcnMobW9kdWxlKVxuICAgICAgICB9LFxuICAgICAgICBkZXZ0b29sOiAnI2lubGluZS1zb3VyY2UtbWFwJyxcbiAgICAgICAgcmVzb2x2ZUxvYWRlcjoge1xuICAgICAgICAgICAgYWxpYXM6IHtcbiAgICAgICAgICAgICAgICAvLyBuZWNlc3NhcnkgdG8gdG8gbWFrZSBsYW5nPVwic2Nzc1wiIHdvcmsgaW4gdGVzdCB3aGVuIHVzaW5nIHZ1ZS1sb2FkZXIncyA/aW5qZWN0IG9wdGlvblxuICAgICAgICAgICAgICAgIC8vIHNlZSBkaXNjdXNzaW9uIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtbG9hZGVyL2lzc3Vlcy83MjRcbiAgICAgICAgICAgICAgICAnc2Nzcy1sb2FkZXInOiAnc2Fzcy1sb2FkZXInXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHBsdWdpbnM6IFtdXG4gICAgfSlcblxuICAgIC8vIG5vIG5lZWQgZm9yIGFwcCBlbnRyeSBkdXJpbmcgdGVzdHNcbiAgICBkZWxldGUgd2VicGFja0NvbmZpZy5lbnRyeVxuXG4gICAgcmV0dXJuIHdlYnBhY2tDb25maWdcbn1cbiJdfQ==